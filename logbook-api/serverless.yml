service: logbook-api
app: opsap
org: opsap

configValidationMode: error

plugins:
  - serverless-bundle # Package our functions with Webpack
  - serverless-offline
  - serverless-dotenv-plugin # Load .env as environment variables

package:
  individually: true

provider:
  name: aws
  runtime: nodejs14.x
  memorySize: 128
  stage: ${opt:stage, 'dev'}
  region: eu-west-1
  lambdaHashingVersion: 20201221
  environment:
    DIVE_DIVER_TABLE: ${self:custom.diveDiverTable.name}
  iam:
    role:
      statements: ${file(resources/diver/diveDiverTableIAM.yml):diveDiverTableIAM}

resources:
  Resources:
    diveDiverTable: ${file(resources/diver/diveDiverTable.yml):diveDiverTable}

functions:
  create-dive:
    handler: src/functions/diver/create-dive.handler
    name: ${self:service}-${self:provider.stage}-create-dive
    description: "create a dive"
    events:
      - http:
          method: POST
          path: /dive

  get-dives:
    handler: src/functions/diver/get-dives.handler
    description: "get all the dives"
    events:
      - http:
          method: GET
          path: /dive

  getDive:
    handler: src/functions/diver/get-dive.handler
    events:
      - http:
          method: GET
          path: /dive/{id}

  # updateDive:
  #   handler: src/functions/diver/updateDive.handler
  #   events:
  #     - http:
  #         method: PATCH
  #         path: dive/{id}
  # deleteDive:
  #   handler: src/functions/diver/deleteDive.handler
  #   events:
  #     - http:
  #         method: DELETE
  #         path: dive/{id}
  #processAuctions:
  #handler: src/functions/processAuctions.handler
  # events:
  #   - schedule: rate(1 minute)

custom:
  diveDiverTable:
    name: !Ref diveDiverTable
    arn: !GetAtt diveDiverTable.Arn
  bundle:
    linting: true

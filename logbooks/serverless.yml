service: logbook-service
app: opsap
org: opsap

plugins:
  - serverless-bundle # Package our functions with Webpack
  - serverless-offline
  - serverless-dotenv-plugin # Load .env as environment variables

configValidationMode: error
useDotenv: true

package:
  individually: true # Package lambda functions individually saving depl time and

provider:
  name: aws
  runtime: nodejs14.x
  memorySize: 128
  stage: ${opt:stage, 'dev'}
  region: eu-west-1
  lambdaHashingVersion: 20201221
  environment:
    DIVE_DIVER_TABLE: ${self:custom.dive-diver-table.name}
  iam:
    role:
      statements: ${file(resources/diver/dive-diver-table-iam.yml):dive-diver-table-iam}

resources:
  Resources:
    DiveDiverTable: ${file(resources/diver/dive-diver-table.yml):dive-diver-table}

functions:
  create-dive:
    handler: src/functions/diver/create-dive.handler
    name: ${self:service}-${self:provider.stage}-create-dive
    description: "create a dive"
    events:
      - http:
          method: POST
          path: /dive

  # get-dives:
  #   handler: src/functions/diver/get-dives.handler
  #   description: "get all the dives"
  #   events:
  #     - http:
  #         method: GET
  #         path: /dive

  # getDive:
  #   handler: src/functions/diver/get-dive.handler
  #   events:
  #     - http:
  #         method: GET
  #         path: /dive/{id}

  # updateDive:
  #   handler: src/functions/diver/updateDive.handler
  #   events:
  #     - http:
  #         method: PATCH
  #         path: dive/{id}
  # deleteDive:
  #   handler: src/functions/diver/deleteDive.handler
  #   events:
  #     - http:
  #         method: DELETE
  #         path: dive/{id}
  #processAuctions:
  #handler: src/functions/processAuctions.handler
  # events:
  #   - schedule: rate(1 minute)

custom:
  dive-diver-table:
    name: !Ref DiveDiverTable
    arn: !GetAtt DiveDiverTable.Arn
  bundle:
    linting: true
